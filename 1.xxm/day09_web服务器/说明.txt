tcp的三次握手四次挥手




# 进程(父子close才算close) 线程(共享全局变量只需关闭一个)

--------------------------------------------------------------------------------------------
linux系统中链接文件分为硬链接和软链接（软链接也叫符号链接）。
硬链接和软链接都是指向文件的一种方式，但两者有不同的地方，
主要有以下不同：
 硬链接：伪备份   软连接：快捷方式  
1.硬链接：创建一个硬链接，增加引用计数（并没有真正创建文件，只是一个别名，
        除了名字不一样，其他都一样时间日期等，硬链接的更改会更改源文件，源文件的更改会硬链接）   
              删除文件，引用计数会减少，当引用计数减为0时，文件真正删除（有防止误删功能） 
          软连接：创建软连接，引用计数不会增加，真实创建一个文件，里面存放的的是路径    
             操作这个路径，就是操作这个路径所在的文件（源文件增加内容，链接文件大小不变）    
             删除源文件，链接文件所保存的路径没了，内容也就没了，软连接也就失效了（没有防止误删功能） 

2.文件大小不一样：   硬链接是指向源文件的block，大小和原文件相同   软连接：为新的文件，
        Block里是源文件的文件名，大小一般为4k,即一个block的大小 
3.硬链接不能给目录做，不能跨分区做。软链接则都可以 
4.硬链接：源文件必须存在         软链接：源文件存不存在都行 硬链接创建： 
        ln 源文件  目的软件名 软连接创建：  ln -s 源文件  目的软件名
--------------------------------------------------------------------------------------------


——————————————————————————————————子进程与父进程——————————————————————————————————————————————
https://blog.csdn.net/qq_33573235/article/details/77645967


子进程继承父进程
用户号UIDs和用户组号GIDs
环境Environment
堆栈
共享内存打开文件的描述符执行时关闭（Close-on-exec）标志信号（Signal）控制设定进程组号当前工作目录根目录文件方式创建屏蔽字资源限制控制终端

子进程独有
进程号PID不同的父进程号自己的文件描述符和目录流的拷贝子进程不继承父进程的进程正文（text），数据和其他锁定内存（memory locks）不继承异步输入和输出

net/qq_33573235/article/details/77645967?utm_source=copy父进程和子进程拥有独立的地址空间和PID参数。
子进程从父进程继承了用户号和用户组号，用户信息，目录信息，环境（表），打开的文件描述符，堆栈，（共享）内存等。经过fork()以后，父进程和子进程拥有相同内容的代码段、数据段和用户堆栈，就像父进程把自己克隆了一遍。事实上，父进程只复制了自己的PCB块。而代码段，数据段和用户堆栈内存空间并没有复制一份，而是与子进程共享。只有当子进程在运行中出现写操作时，才会产生中断，并为子进程分配内存空间。由于父进程的PCB和子进程的一样，所以在PCB中断中所记录的父进程占有的资源，

——————————————————————————————————————————————————————————————————————————————————————————————


——————————————————————————————————　长连接　　短链接　——————————————————————————————————




------------------IP地址本质上是终点地址，它在跳过路由器（hop）的时候不会改变，而MAC地址则是下一跳的地址，每跳过一次路由器都会改变。
                mac地址可以作为一个翻译，毕竟世界不止有英特网也有其他网络
                在二层用arp协议实现mac地址和ip地址的映射
                在三层使用ip地址传输数据，基本不用到mac地址，用到也只是记录下一跳的信息。
                   ip是逻辑上标记 mac是物理标记


----------------请求过程-----------------
1.域名--->解析域名(得通过路由器请求DNS服务器 (先获取路由器mac地址--假如没有记录--会先通过arp获取))----网路间的多个路由器通信通过路由协议(假如路断了会走其他路-路由器之间自动做) ---请求DNS成功返回 域名对应的 ip
2.三次握手 ---HTTP请求  --- 四次挥手断开连接




















